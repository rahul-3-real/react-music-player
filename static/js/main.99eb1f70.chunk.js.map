{"version":3,"sources":["components/LibrarySong.js","components/Library.js","components/Player.js","components/Song.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["LibrarySong","song","songs","id","setCurrentSong","audioRef","isPlaying","setSongs","songSelectHandler","a","newSongs","map","active","current","play","onClick","className","src","cover","alt","name","album","Library","libraryStatus","setLibraryStatus","Player","currentSong","setIsPlaying","songInfo","setSongInfo","activeLibraryHandler","nextPrev","timeUpdateHandler","e","target","currentTime","duration","roundedCurrent","Math","round","roundedDuration","animationPercentage","getTime","time","floor","slice","skipTrackHandler","direction","currentIndex","findIndex","length","songEndHandler","trackAnimation","transform","type","min","max","value","onChange","style","ref","onTimeUpdate","onLoadedMetadata","onEnded","audio","pause","Song","appData","App","useRef","useState","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99eb1f70.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  songs,\r\n  id,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n}) => {\r\n  const songSelectHandler = async () => {\r\n    await setCurrentSong(song);\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  return (\r\n    <li\r\n      onClick={songSelectHandler}\r\n      className={`item ${song.active ? \"active\" : \"\"}`}\r\n    >\r\n      <div className=\"image\">\r\n        <img src={song.cover} alt={song.name} />\r\n      </div>\r\n      <div className=\"text\">\r\n        <h5>{song.name}</h5>\r\n        <h6>{song.album}</h6>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport { RiPlayListLine } from \"react-icons/ri\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryStatus,\r\n  setLibraryStatus,\r\n}) => {\r\n  return (\r\n    <aside className={`library ${libraryStatus ? \"active\" : \"\"}`}>\r\n      <h5 className=\"title\">\r\n        <span>Library</span>\r\n        <button\r\n          className=\"toggle\"\r\n          onClick={() => setLibraryStatus(!libraryStatus)}\r\n        >\r\n          <RiPlayListLine />\r\n        </button>\r\n      </h5>\r\n      <ul className=\"list\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            song={song}\r\n            id={song.id}\r\n            key={song.id}\r\n            songs={songs}\r\n            setCurrentSong={setCurrentSong}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import React from \"react\";\r\nimport {\r\n  BsFillPlayFill,\r\n  BsPauseFill,\r\n  BsChevronLeft,\r\n  BsChevronRight,\r\n} from \"react-icons/bs\";\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  songInfo,\r\n  setSongInfo,\r\n  setSongs,\r\n  songs,\r\n  setCurrentSong,\r\n}) => {\r\n  const activeLibraryHandler = (nextPrev) => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === nextPrev.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  };\r\n\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const timeUpdateHandler = (e) => {\r\n    const current = e.target.currentTime;\r\n    const duration = e.target.duration;\r\n    const roundedCurrent = Math.round(current);\r\n    const roundedDuration = Math.round(duration);\r\n    const animationPercentage = Math.round(\r\n      (roundedCurrent / roundedDuration) * 100\r\n    );\r\n    setSongInfo({\r\n      ...songInfo,\r\n      currentTime: current,\r\n      duration,\r\n      animationPercentage,\r\n    });\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-next\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === \"skip-prev\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        activeLibraryHandler(songs[songs.length - 1]);\r\n        if (isPlaying) audioRef.current.play();\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  const songEndHandler = async () => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  const trackAnimation = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"progress\">\r\n        <input\r\n          type=\"range\"\r\n          min={0}\r\n          max={songInfo.duration || 0}\r\n          value={songInfo.currentTime}\r\n          onChange={dragHandler}\r\n        />\r\n        <div className=\"track\" style={trackAnimation}></div>\r\n        <audio\r\n          ref={audioRef}\r\n          onTimeUpdate={timeUpdateHandler}\r\n          onLoadedMetadata={timeUpdateHandler}\r\n          onEnded={songEndHandler}\r\n          src={currentSong.audio}\r\n          className=\"audio\"\r\n        ></audio>\r\n      </div>\r\n\r\n      <div className=\"controls\">\r\n        <p className=\"time-step\">{getTime(songInfo.currentTime)}</p>\r\n        <div className=\"play-control\">\r\n          <button\r\n            onClick={() => skipTrackHandler(\"skip-prev\")}\r\n            className=\"prev-btn\"\r\n          >\r\n            <BsChevronLeft />\r\n          </button>\r\n          <button onClick={playSongHandler} className=\"play-btn\">\r\n            {isPlaying ? <BsPauseFill /> : <BsFillPlayFill />}\r\n          </button>\r\n          <button\r\n            onClick={() => skipTrackHandler(\"skip-next\")}\r\n            className=\"next-btn\"\r\n          >\r\n            <BsChevronRight />\r\n          </button>\r\n        </div>\r\n        <p className=\"time-end\">\r\n          {songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nconst Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"image\">\r\n        <img src={currentSong.cover} alt={currentSong.name} />\r\n      </div>\r\n      <div className=\"text\">\r\n        <h4>{currentSong.name}</h4>\r\n        <h6>{currentSong.album}</h6>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","const appData = () => {\r\n  return [\r\n    {\r\n      id: 1,\r\n      name: \"Above\",\r\n      album: \"Haikyuu\",\r\n      cover: \"./data/images/above-haikyuu.jpg\",\r\n      audio: \"./data/audio/above-haikyuu.mp3\",\r\n      active: true,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Crossing Fields\",\r\n      album: \"Swords Art Online\",\r\n      cover: \"./data/images/crossing-fields-sword-art-online.jpg\",\r\n      audio: \"./data/audio/crossing-fields-sword-art-online.mp3\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Fly High\",\r\n      album: \"Haikyuu\",\r\n      cover: \"./data/images/fly-high-haikyuu.jpg\",\r\n      audio: \"./data/audio/fly-high-haikyuu.mp3\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Hikaru Nara\",\r\n      album: \"Your Lie In April\",\r\n      cover: \"./data/images/hikaru-nara-your-lie-in-april.jpg\",\r\n      audio: \"./data/audio/hikaru-nara-your-lie-in-april.mp3\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Kataware Doki\",\r\n      album: \"Kimi No Nawa\",\r\n      cover: \"./data/images/kataware-doki-kimi-no-nawa.jpg\",\r\n      audio: \"./data/audio/kataware-doki-kimi-no-nawa.mp3\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Saitama\",\r\n      album: \"One Punch Man\",\r\n      cover: \"./data/images/saitama-one-punch-man.jpg\",\r\n      audio: \"./data/audio/saitama-one-punch-man.mp3\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"Secret Base\",\r\n      album: \"AnoHana\",\r\n      cover: \"./data/images/secret-base-anohana.jpg\",\r\n      audio: \"./data/audio/secret-base-anohana.mp3\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"Tanjiro No Uta\",\r\n      album: \"Demon Slayer\",\r\n      cover: \"./data/images/tanjiro-no-uta-demon-slayer.jpg\",\r\n      audio: \"./data/audio/tanjiro-no-uta-demon-slayer.mp3\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: 9,\r\n      name: \"Uso\",\r\n      album: \"Fullmetal Alchemist\",\r\n      cover: \"./data/images/uso-fullmetal-alchemist.jpg\",\r\n      audio: \"./data/audio/uso-fullmetal-alchemist.mp3\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"Yamiyo\",\r\n      album: \"Dororo\",\r\n      cover: \"./data/images/yamiyo-dororo.jpg\",\r\n      audio: \"./data/audio/yamiyo-dororo.mp3\",\r\n      active: false,\r\n    },\r\n    {\r\n      id: 11,\r\n      name: \"You Say Run\",\r\n      album: \"My Hero Academia\",\r\n      cover: \"./data/images/you-say-run-my-hero-academia.jpg\",\r\n      audio: \"./data/audio/you-say-run-my-hero-academia.mp3\",\r\n      active: false,\r\n    },\r\n  ];\r\n};\r\n\r\nexport default appData;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { RiPlayListLine } from \"react-icons/ri\";\r\nimport Library from \"./components/Library\";\r\nimport Player from \"./components/Player\";\r\nimport Song from \"./components/Song\";\r\nimport \"./styles/app.scss\";\r\nimport data from \"./data\";\r\n\r\nconst App = () => {\r\n  const audioRef = useRef(null);\r\n\r\n  const [songs, setSongs] = useState(data());\r\n  const [currentSong, setCurrentSong] = useState(songs[0]);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [songInfo, setSongInfo] = useState({\r\n    currentTime: 0,\r\n    duration: 0,\r\n    animationPercentage: 0,\r\n  });\r\n  const [libraryStatus, setLibraryStatus] = useState(false);\r\n\r\n  return (\r\n    <main>\r\n      <section className={`${libraryStatus ? \"\" : \"active-player\"}`}>\r\n        <header>\r\n          <h1 className=\"logo\">\r\n            LoFi\r\n            <span>.</span>\r\n          </h1>\r\n          <button\r\n            className=\"toggle\"\r\n            onClick={() => setLibraryStatus(!libraryStatus)}\r\n          >\r\n            <RiPlayListLine />\r\n          </button>\r\n        </header>\r\n        <div className=\"container\">\r\n          <Song currentSong={currentSong} />\r\n          <Player\r\n            currentSong={currentSong}\r\n            isPlaying={isPlaying}\r\n            setIsPlaying={setIsPlaying}\r\n            audioRef={audioRef}\r\n            songInfo={songInfo}\r\n            setSongInfo={setSongInfo}\r\n            songs={songs}\r\n            setSongs={setSongs}\r\n            setCurrentSong={setCurrentSong}\r\n          />\r\n        </div>\r\n      </section>\r\n      <Library\r\n        songs={songs}\r\n        setCurrentSong={setCurrentSong}\r\n        audioRef={audioRef}\r\n        isPlaying={isPlaying}\r\n        setSongs={setSongs}\r\n        libraryStatus={libraryStatus}\r\n        setLibraryStatus={setLibraryStatus}\r\n      />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}